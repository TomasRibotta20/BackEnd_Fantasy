-- Script para crear la base de datos 'fantasydatabase'

-- Eliminar la base de datos si ya existe para asegurar una creación limpia
DROP DATABASE IF EXISTS fantasydatabase;

-- Crear la base de datos
CREATE DATABASE fantasydatabase
    CHARACTER SET utf8mb4
    COLLATE utf8mb4_unicode_ci;

-- Usar la base de datos recién creada
USE fantasydatabase;

-- -----------------------------------------------------
-- Tabla `roles_usuario`
-- Para manejar los niveles de acceso de los usuarios (Administrador, Usuario, etc.)
-- Regla de Negocio (2)
-- -----------------------------------------------------
CREATE TABLE roles_usuario (
    id INT PRIMARY KEY AUTO_INCREMENT,
    descripcion VARCHAR(50) UNIQUE NOT NULL
);

-- -----------------------------------------------------
-- Tabla `clubes`
-- Para los clubes de fútbol de la vida real
-- Regla de Negocio (5), ERD
-- -----------------------------------------------------
CREATE TABLE clubes (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(255) UNIQUE NOT NULL,
    id_api VARCHAR(255) UNIQUE NULL -- ID del club en la API externa (API-Football)
);

-- -----------------------------------------------------
-- Tabla `posiciones`
-- Para las posiciones de los jugadores (Arquero, Defensor, etc.)
-- Regla de Negocio (6), ERD
-- -----------------------------------------------------
CREATE TABLE posiciones (
    id INT PRIMARY KEY AUTO_INCREMENT,
    descripcion VARCHAR(50) UNIQUE NOT NULL
);

-- -----------------------------------------------------
-- Tabla `paises`
-- Para los países de los jugadores
-- Regla de Negocio (7)
-- -----------------------------------------------------
CREATE TABLE paises (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) UNIQUE NOT NULL
);

-- -----------------------------------------------------
-- Tabla `usuarios`
-- Información de los usuarios de la aplicación
-- Regla de Negocio (1), ERD
-- -----------------------------------------------------
CREATE TABLE usuarios (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nombre_usuario VARCHAR(255) UNIQUE NOT NULL,
    correo_electronico VARCHAR(255) UNIQUE NOT NULL,
    hash_contrasenia VARCHAR(255) NOT NULL, -- Se debe guardar el hash de la contraseña
    presupuesto DECIMAL(10, 2) DEFAULT 0.00,
    fecha_creacion DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- -----------------------------------------------------
-- Tabla `usuarios_roles_usuario`
-- Tabla de unión para la relación muchos-a-muchos entre Usuarios y Roles de Usuario
-- Un usuario puede tener varios niveles de acceso
-- -----------------------------------------------------
CREATE TABLE usuarios_roles_usuarios (
    id_usuario INT NOT NULL,
    id_rol_usuario INT NOT NULL,
    PRIMARY KEY (id_usuario, id_rol_usuario),
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (id_rol_usuario) REFERENCES roles_usuario(id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- -----------------------------------------------------
-- Tabla `equipos`
-- Equipos creados por los usuarios en el juego
-- Regla de Negocio (3), ERD
-- -----------------------------------------------------
CREATE TABLE equipos (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(255) NOT NULL,
    precio_total DECIMAL(10, 2) DEFAULT 0.00, -- Valor total de los jugadores del equipo
    id_usuario INT NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- -----------------------------------------------------
-- Tabla `jugadores`
-- Información de los jugadores de fútbol de la vida real
-- Regla de Negocio (4), ERD
-- -----------------------------------------------------
CREATE TABLE jugadores (
    id INT PRIMARY KEY AUTO_INCREMENT,
    id_api VARCHAR(255) UNIQUE NULL, -- ID del jugador en la API externa (API-Football)
    nombre VARCHAR(255) NOT NULL,
    apellido VARCHAR(255) NOT NULL,
    numero_camiseta INT NULL,
    fecha_nacimiento DATE NULL,
    id_pais INT NULL,
    id_posicion INT NULL,
    id_club_actual INT NULL, -- Club actual del jugador en la vida real
    precio_actual DECIMAL(10, 2) DEFAULT 0.00, -- Precio de mercado actual del jugador
    FOREIGN KEY (id_pais) REFERENCES paises(id) ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (id_posicion) REFERENCES posiciones(id) ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (id_club_actual) REFERENCES clubes(id) ON DELETE SET NULL ON UPDATE CASCADE
);

-- -----------------------------------------------------
-- Tabla `plantillas`
-- Jugadores que pertenecen a un equipo de un usuario
-- ERD
-- -----------------------------------------------------
CREATE TABLE plantillas (
    id_equipo INT NOT NULL,
    id_jugador INT NOT NULL,
    fecha_adquisicion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    es_titular BOOLEAN NOT NULL DEFAULT FALSE, -- Si el jugador está en el once inicial (4-3-3),
    PRIMARY KEY (id_equipo, id_jugador),
    FOREIGN KEY (id_equipo) REFERENCES equipos(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (id_jugador) REFERENCES jugadores(id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- -----------------------------------------------------
-- Tabla `jornadas`
-- Las "fechas" del campeonato real
-- Regla de Negocio (9), ERD
-- -----------------------------------------------------
CREATE TABLE jornadas (
    id INT PRIMARY KEY AUTO_INCREMENT,
    numero_jornada INT NOT NULL, -- Número de la jornada
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL
);

-- -----------------------------------------------------
-- Tabla `partidos`
-- Información de cada partido de fútbol
-- Regla de Negocio (10), ERD
-- -----------------------------------------------------
CREATE TABLE partidos (
    id INT PRIMARY KEY AUTO_INCREMENT,
    id_api VARCHAR(255) UNIQUE NULL, -- ID del partido en la API externa (API-Football)
    fecha_partido DATETIME NOT NULL,
    marcador_local INT NULL,
    marcador_visitante INT NULL,
    id_club_local INT NOT NULL,
    id_club_visitante INT NOT NULL,
    id_jornada INT NOT NULL,
    FOREIGN KEY (id_club_local) REFERENCES clubes(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (id_club_visitante) REFERENCES clubes(id) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (id_jornada) REFERENCES jornadas(id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- -----------------------------------------------------
-- Tabla `rendimiento_jugador_partido`
-- Estadísticas detalladas de los jugadores por partido
-- Regla de Negocio (11), ERD (Datos Partido calificacion)
-- -----------------------------------------------------
CREATE TABLE rendimiento_jugador_partido (
    id_partido INT NOT NULL,
    id_jugador INT NOT NULL,
    minutos_jugados INT NULL,
    goles INT NULL,
    asistencias INT NULL,
    total_tiros INT NULL,
    tiros_a_puerta INT NULL,
    total_pases INT NULL,
    pases_clave INT NULL,
    precision_pases DECIMAL(5, 2) NULL, -- Porcentaje
    tackles INT NULL,
    intercepciones INT NULL,
    bloqueos INT NULL,
    faltas_cometidas INT NULL,
    faltas_recibidas INT NULL,
    tarjetas_amarillas INT NULL,
    tarjetas_rojas INT NULL,
    penales_ganados INT NULL,
    penales_cometidos INT NULL,
    penales_anotados INT NULL,
    penales_fallados INT NULL,
    penales_atajados INT NULL,
    atajadas INT NULL,
    goles_recibidos INT NULL,
    calificacion DECIMAL(4, 2) NULL, -- Nota numérica del jugador para el partido
    PRIMARY KEY (id_partido, id_jugador),
    FOREIGN KEY (id_partido) REFERENCES partidos(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (id_jugador) REFERENCES jugadores(id) ON DELETE CASCADE ON UPDATE CASCADE
);