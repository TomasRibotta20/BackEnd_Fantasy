/users:
  get:
    summary: Obtiene todos los usuarios (solo administrador)
    description: Recupera una lista completa de todos los usuarios registrados en la base de datos.
    tags: [Users]
    responses:
      200:
        description: Lista de usuarios recuperada exitosamente.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'found all Users'
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'
      500:
        description: Error del servidor.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error interno del servidor'
  post:
    summary: Crea un nuevo usuario (solo administrador)
    description: Crea un nuevo registro de usuario en la base de datos.
    tags: [Users]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    responses:
      201:
        description: Usuario creado exitosamente.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'user created'
                data:
                  $ref: '#/components/schemas/User'
      400:
        description: Datos de entrada inválidos.
      409:
        description: El usuario ya existe.
      500:
        description: Error del servidor.

/users/{id}:
  get:
    summary: Obtiene un usuario por su ID (solo administrador)
    description: Recupera los detalles de un usuario específico utilizando su identificador único.
    tags: [Users]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
        description: ID numérico del usuario a recuperar.
        example: 1
    responses:
      200:
        description: Usuario encontrado exitosamente.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'found user'
                data:
                  $ref: '#/components/schemas/User'
      404:
        description: Usuario no encontrado.
      500:
        description: Error del servidor.
  put:
    summary: Actualiza un usuario existente (solo administrador)
    description: Actualiza completamente la información de un usuario específico por su ID.
    tags: [Users]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
        description: ID numérico del usuario a actualizar.
        example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    responses:
      200:
        description: Usuario actualizado exitosamente.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'user updated'
      400:
        description: Datos de entrada inválidos.
      404:
        description: Usuario no encontrado.
      409:
        description: Conflicto al actualizar el usuario.
      500:
        description: Error del servidor.
  patch:
    summary: Actualiza parcialmente un usuario existente (solo administrador)
    description: Realiza una actualización parcial de la información de un usuario específico por su ID.
    tags: [Users]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
        description: ID numérico del usuario a actualizar.
        example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    responses:
      200:
        description: Usuario actualizado parcialmente exitosamente.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'user updated'
      400:
        description: Datos de entrada inválidos.
      404:
        description: Usuario no encontrado.
      409:
        description: Conflicto al actualizar el usuario.
      500:
        description: Error del servidor.
  delete:
    summary: Elimina un usuario por su ID (solo administrador)
    description: Elimina un usuario específico de la base de datos utilizando su identificador único.
    tags: [Users]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
        description: ID numérico del usuario a eliminar.
        example: 1
    responses:
      200:
        description: Usuario eliminado exitosamente.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'user deleted'
      500:
        description: Error del servidor.

/users/profile:
  get:
    summary: Obtiene el perfil del usuario autenticado
    description: Recupera los detalles del perfil del usuario actualmente autenticado.
    tags: [Users]
    responses:
      200:
        description: Perfil del usuario recuperado exitosamente.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'user profile'
                data:
                  $ref: '#/components/schemas/User'
      404:
        description: Usuario no encontrado.
      500:
        description: Error del servidor.
  put:
    summary: Actualiza el nombre del usuario autenticado
    description: Actualiza el nombre del usuario actualmente autenticado.
    tags: [Users]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: 'Nuevo Nombre'
    responses:
      200:
        description: Nombre del usuario actualizado exitosamente.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'user name updated'
                data:
                  $ref: '#/components/schemas/User'
      400:
        description: Datos de entrada inválidos.
      404:
        description: Usuario no encontrado.
      500:
        description: Error del servidor.
